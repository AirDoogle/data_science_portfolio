{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "8WfrCFmLHxYu"
   },
   "source": [
    "# CS3033/CS6405 - Data Mining - Second Assignment\n",
    "\n",
    "### Submission\n",
    "\n",
    "This assignment is **due on 14/04/24 at 23:59**. You should submit a single .ipnyb file with your python code and analysis electronically via Canvas.\n",
    "Please note that this assignment will account for 25 Marks of your module grade.\n",
    "\n",
    "### Declaration\n",
    "\n",
    "By submitting this assignment. I agree to the following:\n",
    "\n",
    "<font color=\"red\">“I have read and understand the UCC academic policy on plagiarism, and agree to the requirements set out thereby in relation to plagiarism and referencing. I confirm that I have referenced and acknowledged properly all sources used in the preparation of this assignment.\n",
    "I declare that this assignment is entirely my own work based on my personal study. I further declare that I have not engaged the services of another to either assist me in, or complete this assignment”</font>\n",
    "\n",
    "### Marking scheme\n",
    "Program Correctness: Your program should work correctly on all inputs (including new datasets). Also if there are any specifications about how the program should be written, or how the output should appear, those specifications should be followed.\n",
    "\n",
    "Readability: Variables functions should have meaningful names. Code should be organised into functions/methods where appropriate.\n",
    "There should be an appropriate amount of white space so that the code is readable, and the indentation should be consistent.\n",
    "\n",
    "Documentation: your code and functions/methods should be appropriately commented. However, not every line should be commented because that makes your code overly busy. Think carefully about where comments are added.\n",
    "\n",
    "Code Elegance: There are many ways to write the same functionality into your code, and some of them are needlessly slow or complicated. For example, if you are repeating the same code, it should be inside creating a new method/function or for loop.\n",
    "\n",
    "Code efficiency: The implementation is logically well designed without inappropriate design choices (e.g., unnecessary loops).\n",
    "\n",
    "### Objective\n",
    "\n",
    "The Boolean satisfiability (SAT) problem consists in determining whether a Boolean formula is satisfiable or not. This problem is one of the most widely studied combinatorial problems in computer science. It is the classic NP-complete problem. Over the past number of decades, a significant amount of research work has focused on solving SAT problems with both complete and incomplete solvers.\n",
    "\n",
    "An extended version of the problem is Model Counting (#SAT). In #SAT the solver needs to compute the number of solutions of a Boolean formula. A wide variety of solvers have been designed to tackle this problem.\n",
    "\n",
    "In this project, we want to create an Algorithm Selection (AS) approach to Model Counting. For each #SAT instance, there is a specific solver that works better than the others, the goal of your machine learing approach is to classify it.\n",
    "\n",
    "In AS we represent #SAT problems with a vector of 72 features with general information about the problem, e.g., number of variables, number of clauses, etc. There is no need to understand the features to be able to complete the assignment. For each instance, there is a 'label' column representing the name of the optimal solver.\n",
    "\n",
    "\n",
    "The original dataset is available at:\n",
    "https://github.com/andvise/DM_Assignment/blob/main/train_data.csv\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Oav9G1WSJ1nH"
   },
   "source": [
    "## Data Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "DE0kM0QsJ1En",
    "outputId": "7f2ce018-aba3-475b-d1ea-8ba6c3b73d21"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "c                                        float64\n",
       "v                                        float64\n",
       "clauses_vars_ratio                       float64\n",
       "vars_clauses_ratio                       float64\n",
       "vcg_var_mean                             float64\n",
       "                                          ...   \n",
       "gsat_BestAvgImprovement_CoeffVariance    float64\n",
       "gsat_FirstLocalMinRatio_Mean             float64\n",
       "gsat_FirstLocalMinRatio_CoeffVariance    float64\n",
       "gsat_EstACL_Mean                         float64\n",
       "label                                     object\n",
       "Length: 73, dtype: object"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.read_csv(\"https://github.com/andvise/DM_Assignment/blob/main/train_data.csv?raw=true\")\n",
    "df\n",
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "N8MCvTYTKw4Q",
    "outputId": "48925e6f-8592-4f1c-c590-b24f3f383e5f"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "label\n",
       "gpmc        921\n",
       "d4          168\n",
       "ganak       140\n",
       "addmc        55\n",
       "sharpsat     52\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Label or target variable\n",
    "df['label'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MTvkBPQvITf-"
   },
   "source": [
    "# Tasks\n",
    "\n",
    "## Basic models and evaluation (5 Marks)\n",
    "\n",
    "Using Scikit-learn, train and evaluate a k-NN classifier using 70% of the dataset from training and 30% for testing. For this part of the project, we are not interested in optimising the parameters; we just want to get an idea of the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 632
    },
    "id": "Yj_Q6Hy5UNQ0",
    "outputId": "09828320-a95c-4a23-c70c-7356ad6f156c"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DTC Accuracy: 0.7356608478802993\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "       addmc       0.77      0.77      0.77        13\n",
      "          d4       0.49      0.53      0.51        49\n",
      "       ganak       0.47      0.47      0.47        47\n",
      "        gpmc       0.86      0.85      0.85       276\n",
      "    sharpsat       0.19      0.19      0.19        16\n",
      "\n",
      "    accuracy                           0.74       401\n",
      "   macro avg       0.56      0.56      0.56       401\n",
      "weighted avg       0.74      0.74      0.74       401\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Train a Decision Tree Classifier code (Task from pdf file, I was a little confused on what to do (DTC or k-NN), so I just did both, k-NN below):\n",
    "# Import necessary libraries\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import accuracy_score, classification_report\n",
    "from sklearn.tree import plot_tree\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.tree import DecisionTreeClassifier, plot_tree\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "\n",
    "# Split the dataset into features and labels\n",
    "X = df.drop('label', axis=1)\n",
    "y = df['label']\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "\n",
    "# Train a Decision Tree classifier\n",
    "clf = DecisionTreeClassifier(random_state=42)\n",
    "clf.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the testing set\n",
    "predictions = clf.predict(X_test)\n",
    "\n",
    "# Evaluate the classifier\n",
    "accuracy = accuracy_score(y_test, predictions)\n",
    "print(f'DTC Accuracy: {accuracy}')\n",
    "print(classification_report(y_test, predictions))\n",
    "\n",
    "# Plot the Decision Tree\n",
    "plot_tree(clf, filled=True, feature_names=X.columns, class_names=str(clf.classes_), rounded=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Zl0VXO0YH1nG",
    "outputId": "cd08b9f6-277f-4087-fb26-f0483ffa1ada"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "k-NN Accuracy: 0.6733167082294265\n",
      "Baseline Model Performance/ Classification report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "       addmc       0.50      0.69      0.58        13\n",
      "          d4       0.27      0.29      0.28        49\n",
      "       ganak       0.32      0.17      0.22        47\n",
      "        gpmc       0.78      0.87      0.82       276\n",
      "    sharpsat       0.00      0.00      0.00        16\n",
      "\n",
      "    accuracy                           0.67       401\n",
      "   macro avg       0.38      0.40      0.38       401\n",
      "weighted avg       0.62      0.67      0.64       401\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Train a k-NN classifier\n",
    "knn = KNeighborsClassifier()\n",
    "knn.fit(X_train, y_train)\n",
    "\n",
    "# Evaluate the classifier\n",
    "y_pred = knn.predict(X_test)\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f'k-NN Accuracy: {accuracy}')\n",
    "print(\"Baseline Model Performance/ Classification report:\")\n",
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "zADpr0f8IcGL"
   },
   "source": [
    "## Robust evaluation (10 Marks)\n",
    "\n",
    "In this section, we are interested in more rigorous techniques by implementing more sophisticated methods. Do your best to improve the k-NN classifier performances on this dataset.\n",
    "\n",
    "For instance, you could consider:\n",
    "* Hold-out and cross-validation.\n",
    "* Hyper-parameter tuning.\n",
    "* Feature selection.\n",
    "* Feature normalisation.\n",
    "* Etc.\n",
    "\n",
    "\n",
    "\n",
    "Your report should provide concrete information about your reasoning, everything should be well-explained.\n",
    "\n",
    "The key to geting good marks is to show that you evaluated different methods and that you correctly selected the configuration."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "CPZB03vgNGJe"
   },
   "source": [
    "### **Hold out and Cross-validation evaluation**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "H4s-iukFfq5i",
    "outputId": "d1d44b86-ff4d-4c84-e346-c42b758ed39a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test size: 0.1, CV Mean Accuracy: 0.6989, Hold-out Method Accuracy: 0.6716\n",
      "Test size: 0.2, CV Mean Accuracy: 0.6864, Hold-out Method Accuracy: 0.6791\n",
      "Test size: 0.3, CV Mean Accuracy: 0.6855, Hold-out Method Accuracy: 0.6733\n",
      "Test size: 0.4, CV Mean Accuracy: 0.7004, Hold-out Method Accuracy: 0.6804\n",
      "Test size: 0.5, CV Mean Accuracy: 0.6977, Hold-out Method Accuracy: 0.6766\n",
      "Test size: 0.6, CV Mean Accuracy: 0.6592, Hold-out Method Accuracy: 0.6820\n",
      "Test size: 0.7, CV Mean Accuracy: 0.6500, Hold-out Method Accuracy: 0.6912\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split, cross_val_score\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "import numpy as np\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "\n",
    "# Assume X and y are already defined as your feature set and target variable\n",
    "test_sizes = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7]  # Different test sizes to evaluate\n",
    "results = []\n",
    "\n",
    "for test_size in test_sizes:\n",
    "    # Splitting the dataset into training and testing sets\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)\n",
    "\n",
    "    # Initialize the classifier\n",
    "    classifier = KNeighborsClassifier()\n",
    "\n",
    "    # Perform 10-fold CV on the training data\n",
    "    cv_scores = cross_val_score(classifier, X_train, y_train, cv=10)\n",
    "    mean_cv_accuracy = np.mean(cv_scores)\n",
    "\n",
    "    # Train the classifier on the full training data and evaluate on the test set\n",
    "    classifier.fit(X_train, y_train)\n",
    "    y_pred = classifier.predict(X_test)\n",
    "    holdout_accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "    # Store results\n",
    "    results.append({\n",
    "        'test_size': test_size,\n",
    "        'cv_mean_accuracy': mean_cv_accuracy,\n",
    "        'holdout_accuracy': holdout_accuracy\n",
    "    })\n",
    "\n",
    "# Output the results\n",
    "for result in results:\n",
    "    print(f\"Test size: {result['test_size']}, CV Mean Accuracy: {result['cv_mean_accuracy']:.4f}, Hold-out Method Accuracy: {result['holdout_accuracy']:.4f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "XZUg3K3kNUER"
   },
   "source": [
    "As can be seen in the results here that different training splits (Hold out method) had varying accuracys with 0.7 test size having the highest accuracy at  at 0.6912, however the CV accuracy was the lowest at 0.65, therefore I wasnt very confident in using this for the more devoloped model since not much data is actually used to train the model which leads to lower mean accuracy,\n",
    "howeve I decided to keep all test sizes up to 0.4 in the more developed model since they all had significantly high accuracys, with test size 0.1 accuracy = to 0.67 and CV mean accuracy of 0.6989 and test size of 0.4 had accuracy = to 0.6804 and highest CV mean accuracy of 0.7004\n",
    "\n",
    "the different test sizes from 0.1 to 0.7 showed that as the **test size increased**, the **CV mean accuracy decreased**, indicating that reduced training data impacts the model's ability to generalise.\n",
    "\n",
    "**CV Mean Accuracy:** Remained relatively stable above 68% for test sizes up to 0.5, but dropped  for larger test sizes (0.6 and 0.7).\n",
    "\n",
    "**Holdout Method Accuracy:** Fluctuated across different test sizes, interestingly increasing with larger test sizes, **peaking at a test size of 0.7 (69.12%).**\n",
    "\n",
    "The model showed sensitivity to the amount of training data, with potential **overfitting** with smaller test datasets using test accuracy .\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MOzjq1-qf3Bk"
   },
   "source": [
    "### **Simple Evalutation** - used to find optimal features and knn-n neighbours\n",
    "Knowing that the data is sensitive to training size from the previous evaluation of CV and Holdout i **decided to keep a wide range  of test sizes from 0.1-0.4** while testing other model parameters.\n",
    "\n",
    "this was one of my testing grounds, since this model evaluation worked pretty quicly, I kept it simple.\n",
    "\n",
    "**I tested differen feature selection using SelectKbest** , this was used to reduce dimensionality since there were problems with overfitting and recuding noise and improve accuracy\n",
    "\n",
    " **used a feature scaler:** i compared Standardscaler and MinMaxScaler\n",
    "this normalises feature values and ensure no single feature is overrepresented, this ensure equality of feature contribution in distance computations which leads to more accurate and stable predictions\n",
    "\n",
    "**I also used Number of neighbours,** I tested a wide range with this quick and simple model evaluation , from 5-9, knowing  a wider range can counter overfitting which the model was already having problems with.\n",
    "\n",
    "**I included weights:** I only used distance here since I didnt want to increase computation time, I decided to use distance beacse it it gives more influence to closer neighbours\n",
    "\n",
    "**I included distance metric:** I also only used one metric here to keep this evaluation simple and fast, manhattan was picked as it performs well in high dimensional spaces\n",
    "\n",
    "**Advanced Pipeline Configuration**:\n",
    "   pipeline ensured that each configuration was tested in a systematic and reproducible manner to maintain consistency and accuracy of results\n",
    "\n",
    " **Grid Search with Cross-Validation**:\n",
    "  To  evaluate each combination of parameters using 10-fold cross-validation, ensuring the findings are robust and not due to random variations in data split. [1]\n",
    "   \n",
    "\n",
    "**Parameters used:** test_size range(0.1 - 0.6), feature scaler (standardscaler, MinMaxScaler), knn-n-neighbours (5,7,9), knn-weights (uniform, distance), knn-metric(manhattan), CV-10\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "A8hDPgAUf1ST",
    "outputId": "d1f25431-90a8-41c2-e88e-f54c5fc57daf"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 10 folds for each of 54 candidates, totalling 540 fits\n",
      "Fitting 10 folds for each of 54 candidates, totalling 540 fits\n",
      "Fitting 10 folds for each of 54 candidates, totalling 540 fits\n",
      "Fitting 10 folds for each of 54 candidates, totalling 540 fits\n",
      "Test size: 0.1, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 32}, Best CV score: 0.78038, Test accuracy: 0.70149\n",
      "Test size: 0.2, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 9, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 30}, Best CV score: 0.77251, Test accuracy: 0.72015\n",
      "Test size: 0.3, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': MinMaxScaler(), 'select__k': 31}, Best CV score: 0.77115, Test accuracy: 0.74564\n",
      "Test size: 0.4, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 60}, Best CV score: 0.76414, Test accuracy: 0.76822\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split, GridSearchCV\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.preprocessing import StandardScaler, MinMaxScaler\n",
    "from sklearn.feature_selection import SelectKBest, f_classif\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "test_sizes = [0.1, 0.2, 0.3, 0.4]  # Different test sizes to evaluate\n",
    "\n",
    "results = []  # To store results for different splits\n",
    "\n",
    "for test_size in test_sizes:\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)\n",
    "\n",
    "    pipe = Pipeline([\n",
    "        ('scaler', StandardScaler()),  # Feature scaling\n",
    "        ('select', SelectKBest(f_classif)),  # Feature selection\n",
    "        ('knn', KNeighborsClassifier())  # k-NN classifier\n",
    "    ])\n",
    "\n",
    "    param_grid = {\n",
    "        'scaler': [StandardScaler(), MinMaxScaler(), None],  # Option for no scaling\n",
    "        'select__k': [30,31,32, 40, 60,72],  # Number of features to select\n",
    "        'knn__n_neighbors': [5, 7, 9],  # Number of neighbors\n",
    "        'knn__weights': [ 'distance'],\n",
    "        'knn__metric': ['manhattan']\n",
    "    }\n",
    "\n",
    "    grid_search = GridSearchCV(pipe, param_grid, cv=10, verbose=1)\n",
    "    grid_search.fit(X_train, y_train)\n",
    "\n",
    "    # Evaluating the best model on the test set\n",
    "    best_model = grid_search.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    test_accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "    # Store results including test accuracy\n",
    "    best_params = grid_search.best_params_\n",
    "    best_score = grid_search.best_score_\n",
    "    results.append((test_size, best_params, best_score, test_accuracy))\n",
    "\n",
    "# Output the results\n",
    "for test_size, best_params, best_score, test_accuracy in results:\n",
    "    print(f\"Test size: {test_size}, Best parameters: {best_params}, Best CV score: {best_score:.5f}, Test accuracy: {test_accuracy:.5f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "DvYwVtGEc2gw"
   },
   "source": [
    "This evaluation was very simple and fast to run, i tried to not add too many paramters, I was mainly trying to see what test size range and what number of features were most ideal and the best number of neighbours .\n",
    "\n",
    " From excecuting this code multiple times I found that feature selection of 30,31,32 was one of the bast ranges using kbest for lower test size splits (30-32) yielded higher CV scores and competitive test accuracies, peaking at 74.56% test accuracy with 31 features at a test size of 0.3 and best CV score was **78.03%** for test size 0.1 and 32 features with knn-n of 5 and 9.\n",
    "\n",
    "  . however i found that a feature selection of 60 also gave me the highest testing accuracy of **76.82%** and CV of 76.41% for a test size of 0.4  suggesting better generalization with more features.\n",
    "\n",
    "  StandardSCaler was consisitently one of the best paramters, but MinMaxScaler also appeared once. therefore I continued to use both in the following evaluations.\n",
    "\n",
    "  this evaluation allowed me to find the **optimal range of features (30,31,32,60)  and knn-n neighbours of 5 - 9, I  use these values for the rest of my evaluations.**\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "iBNe3pMbfa29"
   },
   "source": [
    " ### **Robust evalutation** of all parameters using KBest feature selection\n",
    "\n",
    "For the more robust evaluation of the k-NN classifier, I used more parameters for testing to better optimize and understand the model's behavior under different configurations and data conditions, this took longer time to compute than the previous simple evalutation. Here's an overview of the techniques and methodologies:\n",
    "\n",
    "### Robust Evaluation Explanation\n",
    "\n",
    "1. **Extended Test Size Range**:\n",
    "   -  To thoroughly investigate the model's performance across a broader range of training-to-testing ratios, extending up to a test size of 0.6. to observe the model’s performance and see if there is improvement in overfitting\n",
    "\n",
    "2. **Wider range of Feature Selection**:\n",
    "   - I used SelectKBest for a wider range of feature counts includinig the optimum ones (30,31,32,60) i found in the previous eval, from 10 - 'all' in this evalutation. This helps in pinpointing the optimal number while testing all other parameters just in case.\n",
    "\n",
    "3. **Hyperparameter Tuning**:\n",
    "   - **Parameters**: Expanded the search to include different neighbor counts (1, 3, 5, 7, 9), multiple weighting schemes (uniform, distance), and various distance metrics (Euclidean, Manhattan, Hamming).\n",
    "   This tuning helps in identifying the best configurations.\n",
    "\n",
    "4. **Feature Scaling Options**:\n",
    "   Included no scaling as an option, alongside StandardScaler and MinMaxScaler, to evaluate the models performance\n",
    "\n",
    "By employing these advanced techniques, the evaluation aimed to comprehensively optimize the k-NN classifier, ensuring that the final model is not only accurate but also robust across varying operational conditions. The results from this robust evaluation guide effective decision-making in selecting the most appropriate model configurations for deployment in real-world scenarios."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Ep48CMbynmsU",
    "outputId": "1d6581ea-69c4-483e-ef15-9916c387d5ff"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 10 folds for each of 990 candidates, totalling 9900 fits\n",
      "Fitting 10 folds for each of 990 candidates, totalling 9900 fits\n",
      "Fitting 10 folds for each of 990 candidates, totalling 9900 fits\n",
      "Fitting 10 folds for each of 990 candidates, totalling 9900 fits\n",
      "Fitting 10 folds for each of 990 candidates, totalling 9900 fits\n",
      "Fitting 10 folds for each of 990 candidates, totalling 9900 fits\n",
      "Test size: 0.1, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 32}, Best CV score: 0.78038, Test accuracy: 0.70149\n",
      "Test size: 0.2, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 9, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 30}, Best CV score: 0.77251, Test accuracy: 0.72015\n",
      "Test size: 0.3, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': MinMaxScaler(), 'select__k': 31}, Best CV score: 0.77115, Test accuracy: 0.74564\n",
      "Test size: 0.4, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 60}, Best CV score: 0.76414, Test accuracy: 0.76822\n",
      "Test size: 0.5, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 7, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 50}, Best CV score: 0.76660, Test accuracy: 0.74102\n",
      "Test size: 0.6, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 40}, Best CV score: 0.74941, Test accuracy: 0.73441\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split, GridSearchCV\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.preprocessing import StandardScaler, MinMaxScaler\n",
    "from sklearn.feature_selection import SelectKBest, f_classif\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "\n",
    "test_sizes = [0.1,0.2, 0.3, 0.4, 0.5, 0.6]  # Different test sizes to evaluate\n",
    "results = []  # To store results for different splits\n",
    "\n",
    "for test_size in test_sizes:\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)\n",
    "\n",
    "    # Define the pipeline\n",
    "    pipe = Pipeline([\n",
    "        ('scaler', StandardScaler()),  # Scaler\n",
    "        ('select', SelectKBest(f_classif)),  # Feature selection\n",
    "        ('knn', KNeighborsClassifier())  # k-NN classifier\n",
    "    ])\n",
    "\n",
    "\n",
    "    # Define the parameter grid, include options for no scaling, Min-Max scaling, and Standard scaling\n",
    "    param_grid = {\n",
    "        'scaler': [StandardScaler(), MinMaxScaler(), None],  # None implies no scaling\n",
    "        'select__k': [10, 20, 30, 31, 32, 35, 40, 50, 60, 70, 'all'],  # Number of features to select\n",
    "        'knn__n_neighbors': [1, 3, 5, 7, 9],  # Possible k values\n",
    "        'knn__weights': ['uniform', 'distance'],\n",
    "        'knn__metric': ['euclidean', 'manhattan', 'hamming']\n",
    "    }\n",
    "\n",
    "    # Create the grid search object\n",
    "    grid_search = GridSearchCV(pipe, param_grid, cv=10, verbose=1)\n",
    "\n",
    "    # Fit the grid search to the data\n",
    "    grid_search.fit(X_train, y_train)\n",
    "\n",
    "    # Evaluating the best model on the test set\n",
    "    best_model = grid_search.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    test_accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "    # Store results including test accuracy\n",
    "    best_params = grid_search.best_params_\n",
    "    best_score = grid_search.best_score_\n",
    "    results.append((test_size, best_params, best_score, test_accuracy))\n",
    "\n",
    "# Output the results\n",
    "for test_size, best_params, best_score, test_accuracy in results:\n",
    "    print(f\"Test size: {test_size}, Best parameters: {best_params}, Best CV score: {best_score:.5f}, Test accuracy: {test_accuracy:.5f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "hcr7oTlpQ0wz"
   },
   "source": [
    "The evaluation tested various configuration of k-NN classifier over 6 test-sizes, using 990 diffferent parameter settings with a CV of 10.\n",
    "\n",
    "**Key Outcomes:**\n",
    "The best testing accuracy  was for this model at **76.822%**\n",
    "```python\n",
    "\n",
    "Test size: 0.4, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 60}, Best CV score: 0.76414, Test accuracy: 0.76822\n",
    "```\n",
    "\n",
    "The best CV score was **78.03%** for this model\n",
    "```python\n",
    "Test size: 0.1, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 32}, Best CV score: 0.78038, Test accuracy: 0.70149\n",
    "```\n",
    "\n",
    ", however the Test accuracy: **0.70149\n",
    "was much lower**, meaning the model couldnt work as well on unseen data.\n",
    "\n",
    "- **Feature Selection**: Best results were achieved with feature selections varying from 30 to 60, where smaller test sizes favored around 30-32 features, and larger sizes performed best with up to 60 features, with the best testing accuracy having 60 features.\n",
    "- **Optimal Parameters**: The Manhattan distance consistently had the best results across test sizes with 'distance' weighting. The number of neighbors varied from 5 to 9, showing the best balance at 5 neighbors for smaller datasets and varying as test sizes increased.\n",
    "- **Scaling Effects**: StandardScaler was frequently part of the best models, though MinMaxScaler also appeared, no scaling didnt appear at all.\n",
    "\n",
    "- **Performance Peaks**: Highest test accuracy reached 76.82% with 60 features at a test size of 0.4, this shows strong ability to generalise with an increased number of features.\n",
    "\n",
    "**Conclusion:**\n",
    "Through a robust evaluation of 990 configurations of the k-NN classifier across various test sizes, the highest testing accuracy was confirmed at 76.82%\n",
    "for the folloiwng model\n",
    "```python\n",
    "\n",
    "Test size: 0.4, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 60}, Best CV score: 0.76414, Test accuracy: 0.76822\n",
    "```\n",
    "\n",
    "This robust testing approach not only validated the classifier's ability to generalize effectively with a larger number of features but also identified critical parameters that significantly influenced performance. The consistent effectiveness of the Manhattan distance metric , and the 'distance' weighting method and StandardSCaler across multiple  models showed the importance in improving model accuracy, and these parameters are predominantly used in the following models\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "TeSIKD4-ep4S"
   },
   "source": [
    "### PCA evaluation -\n",
    "**Reasoning to use this evaluation :** PCA was implemented to see if the model could be improved knowing the optimal parameters, PCA simplifys the feature space, reduces noise, and improves computational efficiency. It aimed to determine the optimal number of principal components that effectively condense the dataset while preserving critical information. I was hoping i could increase training set size while improving test accuracy [4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "iABL60mKIhZN",
    "outputId": "b4fb8759-6eef-4d1d-e428-5539a6c3f5ed"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 10 folds for each of 90 candidates, totalling 900 fits\n",
      "Fitting 10 folds for each of 90 candidates, totalling 900 fits\n",
      "Fitting 10 folds for each of 90 candidates, totalling 900 fits\n",
      "Fitting 10 folds for each of 90 candidates, totalling 900 fits\n",
      "Test size: 0.1, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 7, 'knn__weights': 'distance', 'pca__n_components': 50, 'scaler': StandardScaler()}, Best CV score: 0.76705, Test accuracy: 0.69403\n",
      "Test size: 0.2, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 7, 'knn__weights': 'distance', 'pca__n_components': 50, 'scaler': MinMaxScaler()}, Best CV score: 0.76224, Test accuracy: 0.74627\n",
      "Test size: 0.3, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 9, 'knn__weights': 'distance', 'pca__n_components': 32, 'scaler': StandardScaler()}, Best CV score: 0.76050, Test accuracy: 0.73566\n",
      "Test size: 0.4, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'pca__n_components': 20, 'scaler': StandardScaler()}, Best CV score: 0.75293, Test accuracy: 0.75701\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split, GridSearchCV\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.preprocessing import StandardScaler, MinMaxScaler\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.feature_selection import SelectKBest, f_classif\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# Define test sizes to evaluate\n",
    "test_sizes = [0.1, 0.2, 0.3, 0.4]\n",
    "\n",
    "# Store the results for different test sizes\n",
    "results = []\n",
    "\n",
    "for test_size in test_sizes:\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)\n",
    "\n",
    "    pipe = Pipeline([\n",
    "        ('scaler', StandardScaler()),  # scaler\n",
    "        ('pca', PCA()),  # PCA dimensionality reduction\n",
    "        ('knn', KNeighborsClassifier())  # k-NN classifier\n",
    "    ])\n",
    "\n",
    "    param_grid = {\n",
    "        'scaler': [StandardScaler(), MinMaxScaler(), None],  # None implies no scaling\n",
    "        'pca__n_components': [20, 25, 30, 31,32,40,50,60,72, None],  # Number of PCA components to keep, None means no reduction\n",
    "        'knn__n_neighbors': [5, 7, 9],  # Number of neighbors\n",
    "        'knn__weights': ['distance'],  # Weight type\n",
    "        'knn__metric': ['manhattan']  # Distance metric\n",
    "    }\n",
    "\n",
    "    grid_search = GridSearchCV(pipe, param_grid, cv=10, verbose=1)\n",
    "    grid_search.fit(X_train, y_train)\n",
    "\n",
    "    # Evaluate the best model on the test set\n",
    "    best_model = grid_search.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    test_accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "    # Collect results\n",
    "    best_params = grid_search.best_params_\n",
    "    best_score = grid_search.best_score_\n",
    "    results.append((test_size, best_params, best_score, test_accuracy))\n",
    "\n",
    "# Output the results\n",
    "for test_size, best_params, best_score, test_accuracy in results:\n",
    "    print(f\"Test size: {test_size}, Best parameters: {best_params}, Best CV score: {best_score:.5f}, Test accuracy: {test_accuracy:.5f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "sCmFCsVxXfdX"
   },
   "source": [
    "### Brief Evaluation of PCA-Integrated k-NN Model Results\n",
    "\n",
    "**Overview:**\n",
    "Implementing PCA into the k-NN model evaluation did not improve performance, with all CV scores  lower than those from the previous models which didnt have  PCA and used Kbest instead at the same test size.\n",
    "\n",
    "the only model which showed improved testing accuracy over the previous model at the same test size 0.2 had a test accuracy of **74.62%** here using PCA and in the previous robust model evaluation the accuracy was **72.015** using Kbest.\n",
    "\n",
    "**explanations of results:**\n",
    "- **there was potential Information Loss**: PCA may have removed important information needed for accurate k-NN classification which led to decreased accuracy.\n",
    "\n",
    "**Conclusion:**\n",
    "The use of PCA did not yield the expected benefits for the k-NN classifier, indicating that careful consideration is needed when applying dimensionality reduction in sensitive models. Therefore I tried an alternative method instead using RFE analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "90eIK_FKeucQ"
   },
   "source": [
    "### RFE analysis\n",
    "**Reasoning to using this evaluation**: to remove potential overfitting and reducing complexity and noise, RFE is used.\n",
    "RFE focuses on essential features, improving efficiency and potentially boosting accuracy, used in handling high-dimensional data.\n",
    "Using RFE with SVR as the estimator allows for effective feature ranking. This setup, combined with a grid search, optimizes k-NN performance across varying test sizes, the optimum parameters which were found in the robust evaluation were used here since this requires intensive computational power [3]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "C1X-S8RdcFwh",
    "outputId": "f5f12ed3-d09d-4b64-8bde-51b5a41153f3"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Label encoding mapping: {'addmc': 0, 'd4': 1, 'ganak': 2, 'gpmc': 3, 'sharpsat': 4}\n",
      "Fitting 5 folds for each of 4 candidates, totalling 20 fits\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.9min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.8min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 2.1min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.7min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.8min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.5s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   7.1s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.6s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.8s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   7.0s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.8min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.8min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 2.1min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.6min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.8min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   7.0s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.6s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.9s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.6s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.7s\n",
      "Fitting 5 folds for each of 4 candidates, totalling 20 fits\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.3min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.5min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.7min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.6min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.9s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.4s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   7.1s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.5s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.4s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.3min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.5min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.6min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.9s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.5s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.9s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.6s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.6s\n",
      "Fitting 5 folds for each of 4 candidates, totalling 20 fits\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.2min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.1min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.8s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.5s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   4.2s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.1s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.1s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.2min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.3min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.2min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.7s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.4s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.3s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   4.3s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.0s\n",
      "Fitting 5 folds for each of 4 candidates, totalling 20 fits\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=  57.4s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.1min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=  59.3s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=  54.2s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.5min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   3.7s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.3s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   3.4s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   3.7s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=5, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.3s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.2min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.2min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.5min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.0min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=StandardScaler(), select__estimator__C=10, select__n_features_to_select=32; total time= 1.4min\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   3.6s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.6s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   5.4s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   7.9s\n",
      "[CV] END knn__metric=manhattan, knn__n_neighbors=7, knn__weights=distance, scaler=MinMaxScaler(), select__estimator__C=10, select__n_features_to_select=32; total time=   6.8s\n",
      "Test size: 0.1, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': MinMaxScaler(), 'select__estimator__C': 10, 'select__n_features_to_select': 32}, Best CV score: 0.77372, Test accuracy: 0.73134\n",
      "Test size: 0.2, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 7, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__estimator__C': 10, 'select__n_features_to_select': 32}, Best CV score: 0.77346, Test accuracy: 0.74627\n",
      "Test size: 0.3, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 7, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__estimator__C': 10, 'select__n_features_to_select': 32}, Best CV score: 0.77112, Test accuracy: 0.74065\n",
      "Test size: 0.4, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 7, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__estimator__C': 10, 'select__n_features_to_select': 32}, Best CV score: 0.75658, Test accuracy: 0.76636\n"
     ]
    }
   ],
   "source": [
    "\n",
    "from sklearn.preprocessing import StandardScaler, MinMaxScaler, LabelEncoder\n",
    "from sklearn.feature_selection import RFE\n",
    "from sklearn.svm import SVR\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.model_selection import GridSearchCV, train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# Encode the label column\n",
    "label_encoder = LabelEncoder()\n",
    "df['label'] = label_encoder.fit_transform(df['label'])\n",
    "\n",
    "# Print the mapping of encoded classes\n",
    "label_mapping = dict(zip(label_encoder.classes_, label_encoder.transform(label_encoder.classes_)))\n",
    "print(\"Label encoding mapping:\", label_mapping)\n",
    "\n",
    "# Prepare label\n",
    "X = df.drop('label', axis=1)\n",
    "y = df['label']\n",
    "\n",
    "# List of different test sizes to iterate over\n",
    "test_sizes = [0.1, 0.2, 0.3, 0.4]\n",
    "\n",
    "# Storage for results\n",
    "results = []\n",
    "\n",
    "for test_size in test_sizes:\n",
    "    # Split the data\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)\n",
    "\n",
    "    # Define the pipeline\n",
    "    pipe = Pipeline([\n",
    "        ('scaler', StandardScaler()),  # scaler\n",
    "        ('select', RFE(estimator=SVR(kernel=\"linear\"))),  # RFE with SVR as the estimator\n",
    "        ('knn', KNeighborsClassifier())  # k-NN classifier\n",
    "    ])\n",
    "\n",
    "    # Define the parameter grid\n",
    "    param_grid = {\n",
    "        'scaler': [StandardScaler(), MinMaxScaler()],\n",
    "        'select__n_features_to_select': [32],\n",
    "        'select__estimator__C': [10],  # Regularization parameter for the SVR\n",
    "        'knn__n_neighbors': [5, 7],\n",
    "        'knn__weights': ['distance'],\n",
    "        'knn__metric': ['manhattan']\n",
    "    }\n",
    "\n",
    "    # Create the grid search object\n",
    "    grid_search = GridSearchCV(pipe, param_grid, cv=5, verbose=3)\n",
    "\n",
    "    # Fit the grid search to the training data\n",
    "    grid_search.fit(X_train, y_train)\n",
    "\n",
    "    # Evaluate the best model on the test set\n",
    "    best_model = grid_search.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    test_accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "    # Collect results\n",
    "    best_params = grid_search.best_params_\n",
    "    best_score = grid_search.best_score_\n",
    "    results.append((test_size, best_params, best_score, test_accuracy))\n",
    "\n",
    "# Output the results\n",
    "for test_size, best_params, best_score, test_accuracy in results:\n",
    "    print(f\"Test size: {test_size}, Best parameters: {best_params}, Best CV score: {best_score:.5f}, Test accuracy: {test_accuracy:.5f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "sz26GfsXs2Qg"
   },
   "source": [
    "Explanation  of RFE-Integrated k-NN Model Results:\n",
    "\n",
    "The implementation of Recursive Feature Elimination (RFE) with the k-NN classifier across different test sizes demonstrated some performance improvements:\n",
    "\n",
    "- **improved accuracy of smaller test size (0.1 and 0.2 ):**\n",
    " test size 0.1 had an accuracy of **73.134** and 0.2 had an accuracy of **74.627%** which was **higher** than all previous models testing accuracy, however the CV of 0.1 was slightly lower than the previous models at (0.1) 77.372% and (0.2) 77.346% compared to the robust evaluations (0.1) 78.038% and (0.2 )77.251%, this is not a big difference therefore I think these models were better under RFE.\n",
    "\n",
    "- **test size 0.3:** showed no improvement over previous models evaluations\n",
    "- **test size 0.4 :** showed the highest test accuracy of this whole evaluation at **76.63%** and had a CV score of **75.658%**, however this was not higher than the robust evaluations best model which still is the best model at this point with test accuracy of 76.822% and CV of 76.414%.\n",
    "\n",
    "**Conclusion**: RFE improved performance over some of the previous models from other evaluations which shows the importance of feature selection however, there was no improvement over the best model which still is the following model:\n",
    "\n",
    "```python\n",
    "Test size: 0.4, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 60}, Best CV score: 0.76414, Test accuracy: 0.76822\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Zn0Qnr_JYyv2"
   },
   "source": [
    "### Final model\n",
    "The best model found in my simple evaluation and confirmed in my Robust evaluation. The model has a testing accuracy of **76.822%**.\n",
    "\n",
    "The model paramters:\n",
    "```python\n",
    "Test size: 0.4, Best parameters: {'knn__metric': 'manhattan', 'knn__n_neighbors': 5, 'knn__weights': 'distance', 'scaler': StandardScaler(), 'select__k': 60}, Best CV score: 0.76414, Test accuracy: 0.76822\n",
    "```\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "poIkXqMZ3oDA",
    "outputId": "810d1eb5-4edb-4b8c-f23d-e070fb57ff1d"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Final Model Test Accuracy: 0.76822\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "       addmc       0.83      0.79      0.81        19\n",
      "          d4       0.53      0.45      0.48        67\n",
      "       ganak       0.47      0.44      0.46        59\n",
      "        gpmc       0.85      0.91      0.88       369\n",
      "    sharpsat       0.46      0.29      0.35        21\n",
      "\n",
      "    accuracy                           0.77       535\n",
      "   macro avg       0.63      0.57      0.60       535\n",
      "weighted avg       0.75      0.77      0.76       535\n",
      "\n"
     ]
    }
   ],
   "source": [
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import accuracy_score, classification_report\n",
    "from sklearn.tree import plot_tree\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.tree import DecisionTreeClassifier, plot_tree\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.model_selection import GridSearchCV, train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.preprocessing import StandardScaler, MinMaxScaler, LabelEncoder\n",
    "from sklearn.feature_selection import SelectKBest, f_classif\n",
    "\n",
    "\n",
    "\n",
    "test_size = 0.4\n",
    "\n",
    "# due to encoding in previous code cell, relabel\n",
    "df = pd.read_csv(\"https://github.com/andvise/DM_Assignment/blob/main/train_data.csv?raw=true\")\n",
    "df\n",
    "df.dtypes\n",
    "\n",
    "# Split the dataset into features and labels\n",
    "X = df.drop('label', axis=1)\n",
    "y = df['label']\n",
    "\n",
    "# Label or target variable\n",
    "df['label'].value_counts()\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size , random_state=42)\n",
    "\n",
    "# pipeline\n",
    "pipeline = Pipeline([\n",
    "    ('scaler', StandardScaler()),                    # Feature scaling\n",
    "    ('selector', SelectKBest(score_func=f_classif, k=60)),  # Feature selection\n",
    "    ('knn', KNeighborsClassifier(\n",
    "        n_neighbors=5,                               # Number of neighbors\n",
    "        metric='manhattan',                          # Distance metric\n",
    "        weights='distance'                           # Weight type\n",
    "    ))\n",
    "])\n",
    "\n",
    "# Fit the pipeline to the training data\n",
    "pipeline.fit(X_train, y_train)\n",
    "\n",
    "# Predict the test set\n",
    "y_pred = pipeline.predict(X_test)\n",
    "\n",
    "# Calculate the accuracy of the model\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "# Output the accuracy\n",
    "print(f\"Final Model Test Accuracy: {accuracy:.5f}\")\n",
    "print(classification_report(y_test, y_pred))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "p4pCPsLc5myX"
   },
   "source": [
    "### Explanation of the final model\n",
    "\n",
    "**Model Configuration:**\n",
    "- **Test Size (0.4)**: Strikes a balance between training and validation, allowing for good generalisation.\n",
    "- **StandardScaler**: features contribute equally by standardizing, for k-NN’s distance-based calculations.\n",
    "- **SelectKBest (k=60)**: Focuses model training on the 60 most informative features, reducing complexity and improving accuracy.\n",
    "- **KNeighborsClassifier**: Uses 5 neighbors and Manhattan distance for local structure sensitivity and high-dimensional handling.\n",
    "\n",
    "**Performance Metrics:**\n",
    "- **Overall Accuracy (0.76822)**: High accuracy indicates effective generaliasation to unseen data.\n",
    "- **Best CV score (0.76414)**: shows that the model has consistent performance across different data subsets showing its reliablilty.\n",
    "- **Precision and Recall**: Excellent in identifying the 'gpmc' class with both high precision (.85) and recall (.91). Variability in scores across other classes suggests areas for refinement but confirms the model's reliability in handling a wide range of data characteristics.\n",
    "\n",
    "**Conclusion:**\n",
    "This model achieves strong performance across key metrics. Its configuration uses feature selection and scaling techniques, proving its suitability for practical applications.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "FYoMg0EZIrNd"
   },
   "source": [
    "# New classifier (10 Marks)\n",
    "\n",
    "Replicate the previous task for a classifier different than K-NN and decision trees. Briefly describe your choice.\n",
    "Try to create the best model for the given dataset.\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "uOlJoJFK-1fD"
   },
   "source": [
    "### **Reasoning for using Random Forest Classifier - Evaluation 1**\n",
    "It has the ability to handle complex datasets with diverse features. Known for its usefulness against overfitting which I think was an issue in the previous K-nn classifier, Random Forest improves prediction accuracy by averaging multiple decision trees, each trained on different data subsets. I used GridSearchCV to optimize key parameters, ensuring the model's effectiveness across varying train-test splits. This methodology enhances the classifier's reliability and generalisation capabilities [2].\n",
    "\n",
    "I evaluated a broad range of parameters to see which ones concsistently gave the the best model performance, the parameters explained here:\n",
    "\n",
    "**estimators**:  more trees help averaging out noise, i started with 100,200 and 300\n",
    "\n",
    " **max depth**: of none, 10 and 50 which controls the levels of each tree in the forest, lower values generalise better whereas higher values are more complex and can lead to overfitting\n",
    "\n",
    "**min_sample_split:** number of values needed to split an node, high value prevent creating complex trees and prevent overfitting, low values are more complex and may overfit, I tried a range of 2(default),5 and 10 for a wide range to see what works\n",
    "\n",
    "**min_samples_leaf** min no. of samples a leaf node has, higher values has more samples which smoothens prediction and enhances geralization, lower values allow for flexibiliity but can lead to  overfitting, i used a wide range from high to low to see what works 1 (default), 2 and 4\n",
    "\n",
    "**max features**: by limiting number of features at each split, this parameter introduces randomness into tree builiding process. low  feature means trees are more likely to be more different from each other , reduces variance but may also not capture important data leading to underfitting, high values can cause model fit closer to training data risking overfitting, i used sqrt and log2 in this evaluation too see how they perform."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "GycdDU6Coh5j",
    "outputId": "39a6f933-3241-4813-8ef8-28c5e075616e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 162 candidates, totalling 810 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.766 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.779 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.803 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.798 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   1.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.826 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.794 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.771 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.803 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.804 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.766 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.779 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.822 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.799 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.822 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.804 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.748 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.729 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.761 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.789 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.804 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.752 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.748 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.803 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.794 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.775 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.808 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.799 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.748 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.826 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.798 total time=   1.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.785 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.771 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.808 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.757 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.808 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.804 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.752 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.734 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.793 total time=   1.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.790 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.789 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.752 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.729 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.790 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.724 total time=   1.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.779 total time=   1.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.729 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.784 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.798 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.785 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.766 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.734 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.784 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.785 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.729 total time=   1.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.729 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.784 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.798 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.785 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.766 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.734 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.785 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.729 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.784 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.776 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.789 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.780 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.729 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.789 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.780 total time=   1.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.729 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.812 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.817 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.790 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.784 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.812 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.799 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.793 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.817 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.799 total time=   1.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.748 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.789 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.817 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.804 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.798 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.799 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.752 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.803 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.799 total time=   1.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.771 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.798 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.798 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.808 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   1.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.812 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.804 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.812 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.799 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.729 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.784 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.803 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.790 total time=   1.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.738 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.789 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.812 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.780 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.729 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.789 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.780 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.784 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.780 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.766 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.724 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.761 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.790 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.779 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.785 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.724 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.780 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.729 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.790 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.779 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.785 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.724 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.779 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.780 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.729 total time=   1.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.779 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.748 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.793 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.757 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.789 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.785 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.734 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.790 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.812 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.804 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.734 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.808 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.822 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.799 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.724 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.761 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.822 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.748 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.734 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.822 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.794 total time=   1.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.734 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.803 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.799 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.793 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.799 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.757 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.793 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.799 total time=   1.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.757 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.743 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.761 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.798 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.734 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.779 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.798 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.789 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.808 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.790 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.738 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.798 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.794 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.779 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.793 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.790 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.748 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.793 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.790 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.748 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.803 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.793 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.794 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.743 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.761 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.794 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.743 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.779 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.785 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.724 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.779 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.780 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.729 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.761 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.785 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.724 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.789 total time=   1.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.785 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.724 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.779 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.780 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.757 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.729 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.761 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.785 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.724 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.789 total time=   1.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.790 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.784 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.785 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.752 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.793 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.790 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.757 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.779 total time=   1.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.808 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.779 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.817 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.804 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.804 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.803 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.808 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.804 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.757 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.734 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.779 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.812 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.799 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.748 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.812 total time=   1.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.804 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.724 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.793 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.804 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.757 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.798 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.804 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.757 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.798 total time=   1.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.798 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.803 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.738 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.812 total time=   1.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.804 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.748 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.803 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.720 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.808 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.794 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.752 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.729 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.761 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.803 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.790 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.784 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.793 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.790 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.757 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.784 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.793 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.790 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.734 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.793 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.785 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.729 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.784 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.793 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.785 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.734 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.784 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.785 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.729 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.729 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.784 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.793 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.785 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.734 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.784 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.785 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.729 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.784 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.771 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.724 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.793 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.790 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.752 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.729 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.793 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.785 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.729 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.766 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.779 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.803 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.798 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.826 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.794 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.771 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.803 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.804 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.766 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.779 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.822 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.799 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.822 total time=   2.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.804 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.748 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.729 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.761 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.789 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.804 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.752 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.748 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.803 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.794 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   1.5s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.775 total time=   2.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.808 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.799 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.826 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.798 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.785 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.771 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.808 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.757 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.808 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.804 total time=   1.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.752 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.734 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.793 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.790 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.789 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.752 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.729 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.775 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.784 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.790 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.724 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.779 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.729 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.784 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.798 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.785 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.766 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.734 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.785 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.729 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.729 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.784 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.798 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.785 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.766 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.734 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.784 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.785 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.729 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.784 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.776 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.789 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.780 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.729 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.789 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.780 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.729 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.812 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.817 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.790 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.734 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.784 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.812 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.799 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.793 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.817 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.799 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.748 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.789 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.817 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.804 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.798 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.799 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.752 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.803 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.799 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.771 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.798 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.748 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.798 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.808 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.812 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.804 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.757 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.757 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.812 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.799 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.748 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.729 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.784 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.803 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.790 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.738 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.789 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.812 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.780 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.729 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.789 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.780 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.784 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.780 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.766 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.724 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.761 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.790 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.779 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.785 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.724 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.780 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.729 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.790 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.734 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.779 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.785 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.724 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.779 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.780 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.757 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.729 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.779 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.785 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.748 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.793 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.757 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.734 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.789 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.785 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.734 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.784 total time=   1.1s\n",
      "Fitting 5 folds for each of 162 candidates, totalling 810 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.807 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.802 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.770 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.802 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.807 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.786 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.797 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.770 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.802 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.813 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.791 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.797 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.791 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.807 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.759 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.807 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.791 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.807 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.813 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.781 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.749 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.807 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.738 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.733 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.797 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.749 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.754 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.807 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.733 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.797 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.727 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.775 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.754 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.727 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.791 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.727 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.759 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.802 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.813 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.834 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.770 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.802 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.786 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.807 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.754 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.770 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.754 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.797 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.786 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.791 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.749 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.807 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.802 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.824 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.797 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.813 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.797 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.807 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.786 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.754 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.733 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.791 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.807 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.791 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.759 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.733 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.813 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.738 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.802 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.738 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.733 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.733 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.813 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.743 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.802 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.738 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.733 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.802 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.733 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.786 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.743 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.791 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.749 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.807 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.807 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.807 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.807 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.802 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.802 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.733 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.797 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.759 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.770 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.749 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.807 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.738 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.754 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.797 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.791 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.738 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.818 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.738 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.802 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.791 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.770 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.791 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.797 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.727 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.727 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.781 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.727 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.749 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.727 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.727 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.781 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.727 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.791 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.727 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.791 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.813 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.802 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.791 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.797 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.754 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.759 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.791 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.738 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.791 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.786 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.733 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.807 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.738 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.754 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.802 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.781 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.802 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.786 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.754 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.738 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.802 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.786 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.733 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.813 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.802 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.743 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.802 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.738 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.802 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.733 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.797 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.802 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.802 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.733 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.797 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.727 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.781 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.759 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.743 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.727 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.807 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.802 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.802 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.807 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.786 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.797 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.770 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.802 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.759 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.813 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.791 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.797 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.791 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.807 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.770 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.791 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.759 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.807 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.791 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.807 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.813 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.781 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.749 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.807 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.738 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.733 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.797 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.781 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.749 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.754 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.807 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.797 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.754 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.733 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.797 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.727 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.754 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.727 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.791 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.727 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.759 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.802 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.813 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.786 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.834 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.786 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.802 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.786 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.807 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.749 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.797 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.754 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.770 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.754 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.797 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.786 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.754 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.765 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.797 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.791 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.749 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.807 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.802 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.743 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.824 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.797 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.754 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.813 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.797 total time=   1.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.765 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.743 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.807 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.786 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.765 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.754 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.733 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.791 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.765 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.807 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.759 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.791 total time=   1.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.759 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.733 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.813 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.738 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.802 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   2.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.738 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.733 total time=   1.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.765 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.754 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.759 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.733 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.813 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.765 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.749 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.743 total time=   1.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.738 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.802 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.738 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.733 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.802 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.754 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.743 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.733 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.786 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.749 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.781 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.743 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.749 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.791 total time=   1.0s\n",
      "Fitting 5 folds for each of 162 candidates, totalling 810 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.789 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.769 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.825 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.783 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.776 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.787 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.825 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.770 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.800 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.812 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.764 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.812 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.764 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.819 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.758 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.806 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.758 total time=   1.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.800 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.764 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.787 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.812 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.764 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.800 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.764 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.769 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.764 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.806 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.764 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.794 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.800 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.758 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.787 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.758 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.745 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.744 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.800 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.745 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.750 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.744 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.744 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.752 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.800 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.733 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.800 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.745 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.745 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.776 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.819 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.844 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.776 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.787 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.831 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.745 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.769 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.781 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.812 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.750 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.825 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.764 total time=   1.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.819 total time=   1.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.725 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.769 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.787 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.745 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.787 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.794 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.794 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.758 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.800 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.764 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.800 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.758 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.787 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.758 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.739 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.769 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.806 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.806 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.739 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.731 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.744 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.806 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.739 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.731 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.745 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.750 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.806 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.727 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.806 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.750 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.794 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.787 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.812 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.819 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.758 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.776 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.794 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.764 total time=   1.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   2.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.794 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.752 total time=   1.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   2.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.787 total time=   2.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.787 total time=   2.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.745 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.806 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.758 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.758 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.750 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.775 total time=   1.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.752 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.744 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.769 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.800 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.800 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.769 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.750 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.800 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.764 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.794 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.739 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.794 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.745 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.738 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.794 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.745 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.769 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.800 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.744 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.744 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.745 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.800 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.745 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.744 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.750 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.794 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.745 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.744 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.739 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.800 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.745 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.738 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.745 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.776 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.819 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.758 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.806 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.812 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.752 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.787 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.758 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.819 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.758 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.787 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.800 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.745 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.794 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.769 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.794 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.775 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.800 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.758 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.787 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.787 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.764 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.744 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.787 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.764 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.764 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.794 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.745 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.745 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.738 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.806 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.745 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.750 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.800 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.739 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.744 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.794 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.744 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.787 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.739 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.744 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.794 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.745 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.744 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.781 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.752 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.750 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.787 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.739 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.800 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.727 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.738 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.789 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.769 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.825 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.783 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.776 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.787 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.825 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.812 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.764 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   1.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.812 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.764 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.775 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.819 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.758 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.806 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.758 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.800 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.764 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.787 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.812 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.764 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.800 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.764 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.781 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.764 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.806 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.764 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.794 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.800 total time=   1.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.758 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.787 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.758 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.745 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.750 total time=   0.5s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.744 total time=   0.5s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.762 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.806 total time=   0.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.744 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.800 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.745 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.744 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.762 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.744 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.769 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.800 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.752 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.756 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.800 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.733 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.738 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.800 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.745 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.800 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.745 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.750 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=sqrt, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.776 total time=   0.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.819 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.844 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.776 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.831 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.745 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.812 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.775 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.825 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.764 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.775 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.819 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.752 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.725 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.787 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.745 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.794 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.781 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.794 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.758 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.781 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.800 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.770 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.775 total time=   0.5s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.5s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.764 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.800 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.758 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.787 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.758 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.769 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.739 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.769 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.806 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.752 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.769 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=2, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.806 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.739 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.731 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.806 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.739 total time=   0.3s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.750 total time=   0.3s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.756 total time=   0.3s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.731 total time=   0.3s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.752 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.756 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.750 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=200;, score=0.787 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.745 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.750 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.762 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.744 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=5, classifier__n_estimators=300;, score=0.806 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.727 total time=   0.5s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.750 total time=   0.4s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.744 total time=   0.4s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=100;, score=0.806 total time=   0.3s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.733 total time=   0.6s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.744 total time=   0.6s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.762 total time=   0.6s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=200;, score=0.806 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.733 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.744 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.762 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.750 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=50, classifier__max_features=log2, classifier__min_samples_leaf=4, classifier__min_samples_split=10, classifier__n_estimators=300;, score=0.794 total time=   0.9s\n",
      "Test size: 0.2, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 'sqrt', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 300}, Best CV score: 0.78281, Test accuracy: 0.75746\n",
      "Test size: 0.3, Best parameters: {'classifier__max_depth': 10, 'classifier__max_features': 'log2', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.78182, Test accuracy: 0.75810\n",
      "Test size: 0.4, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 'sqrt', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.79027, Test accuracy: 0.77009\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import classification_report, accuracy_score\n",
    "\n",
    "test_sizes = [ 0.2, 0.3, 0.4]  # Different test sizes to evaluate\n",
    "\n",
    "results = []  # To store results for different splits\n",
    "\n",
    "for test_size in test_sizes:\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)\n",
    "\n",
    "    pipe = Pipeline([\n",
    "        ('classifier', RandomForestClassifier( random_state=42))\n",
    "    ])\n",
    "\n",
    "    param_grid = {\n",
    "        'classifier__n_estimators': [100, 200,300],  # Number of trees\n",
    "        'classifier__max_depth': [None, 10,50],  # Max depth of trees\n",
    "        'classifier__min_samples_split': [2, 5,10],       # Minimum number of samples required to split an internal node\n",
    "        'classifier__min_samples_leaf': [1, 2, 4],         # Minimum number of samples required to be at a leaf node\n",
    "        'classifier__max_features': [ 'sqrt', 'log2'],  # Number of features to consider for the best split\n",
    "\n",
    "    }\n",
    "\n",
    "    grid_search = GridSearchCV(pipe, param_grid, cv=5, verbose=3)\n",
    "    grid_search.fit(X_train, y_train)\n",
    "\n",
    "    # Evaluating the best model on the test set\n",
    "    best_model = grid_search.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    test_accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "    # Store results including test accuracy\n",
    "    best_params = grid_search.best_params_\n",
    "    best_score = grid_search.best_score_\n",
    "    results.append((test_size, best_params, best_score, test_accuracy))\n",
    "\n",
    "# Output the results\n",
    "for test_size, best_params, best_score, test_accuracy in results:\n",
    "    print(f\"Test size: {test_size}, Best parameters: {best_params}, Best CV score: {best_score:.5f}, Test accuracy: {test_accuracy:.5f}\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "T7IObrzDSHkl"
   },
   "source": [
    "**Best parameters based off of preious model**\n",
    "The best parameters identified from the grid searches indicate a clear pattern in the settings for min_samples_leaf and min_samples_split, consistently set at 1 and 2  across different test sizes. This suggests a preference for allowing trees in the Random Forest to grow complex, capturing finer details in the data. This complexity has not led to overfitting, as indicated by the  high cross-validation scores and test accuracys, showing good generalisation across unseen data.\n",
    "\n",
    "for the best models I got a max depth of none for classifiers with max features using sqrt, and I got a max depth of 10 for those using log2,\n",
    "\n",
    "**max_depth: none for classifiers_max_features = sqrt**: the model can effectively use more information at each decision point, which might be why it performs well without depth constraints\n",
    "\n",
    " ***max_depth: 10 for classifiers_max_features = log2**:  with fewer features per split, limiting the depth helps to avoid overfitting and improves model generalization.\n",
    "\n",
    " Based on these insights, the next phase of evaluation will continue using only min_samples_leaf of 1 and min_samples_split of 2 to find more optimal parameters\n",
    "\n",
    "The best model had an accuracy of **77.009%** and CV of **79.027** test size of 0.4:\n",
    "```python\n",
    "Test size: 0.4, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 'sqrt', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.79027, Test accuracy: 0.77009\n",
    "```\n",
    "---\n",
    " ### **Random Tree Classifier 2- maxfeatures = (32), max depth = 20 , removal of other values for min_samples_split and min_samples_leaf**\n",
    "\n",
    " **Reasoning for these parameters**\n",
    " based off the previous evaluation, I found some optimum parameters in:\n",
    " **min_samples_leaf of 1** and **min_samples_split of 2**\n",
    " i only used those values in the following evaluation.\n",
    "\n",
    " set **max_feature=32** which i found was optimum in the previous assignments task knn classifier,\n",
    "\n",
    "set **max depth** = none,10,20: since the previous evaluation didnt return 50 in any of the optimal paramters i decided to replace it with  20 to see if it would improve the model at that value.\n",
    "\n",
    "**estimators = 200,300, 500**: replaced 100 with 500 for to see if it would reduce noise, and since 100 wasnt an optimum parameter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "ZenVzU7hM8BV",
    "outputId": "ad95de59-37f8-44bd-a8ce-0ff81ac2f430"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 9 candidates, totalling 45 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   3.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.766 total time=   3.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   3.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   3.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   3.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   5.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   4.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   7.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   6.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.822 total time=   5.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   7.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=   8.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   8.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.779 total time=   7.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=   8.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   2.8s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   3.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   3.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   2.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   2.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.790 total time=   4.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   4.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   4.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   5.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.831 total time=   4.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.794 total time=   7.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   7.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   8.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.779 total time=   7.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.822 total time=   8.6s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   2.9s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.766 total time=   3.6s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   3.2s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   3.0s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   3.2s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   5.3s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   4.7s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   4.8s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   5.1s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.822 total time=   4.7s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   8.1s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=   8.3s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=   7.8s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.779 total time=   8.2s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=   8.1s\n",
      "Fitting 5 folds for each of 9 candidates, totalling 45 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   3.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   2.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   2.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   2.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   2.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   4.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   4.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   3.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   4.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.824 total time=   4.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   7.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   6.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   7.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   6.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.824 total time=   7.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   2.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.754 total time=   2.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   2.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.754 total time=   2.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.818 total time=   2.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   3.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   4.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   3.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   3.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.818 total time=   4.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.791 total time=   6.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   6.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   6.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   6.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.829 total time=   6.9s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   2.6s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   3.3s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   2.7s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   2.5s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   2.7s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   4.5s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   4.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   3.9s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   4.6s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.824 total time=   4.2s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   6.3s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   7.3s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   6.8s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   6.7s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.824 total time=   7.4s\n",
      "Fitting 5 folds for each of 9 candidates, totalling 45 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   2.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   2.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   2.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   2.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   2.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   3.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   3.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   3.2s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   3.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   4.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.739 total time=   5.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.750 total time=   5.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   5.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.825 total time=   6.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   2.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   2.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   2.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   2.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.806 total time=   2.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.758 total time=   3.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   3.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   3.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   3.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.812 total time=   3.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.758 total time=   5.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   5.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.806 total time=   5.2s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   2.4s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   2.9s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   2.1s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   2.2s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   2.3s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   3.4s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   3.9s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   3.0s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   3.2s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   3.8s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.739 total time=   5.8s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.750 total time=   5.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   5.9s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.3s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.825 total time=   6.1s\n",
      "Test size: 0.2, Best parameters: {'classifier__max_depth': 20, 'classifier__max_features': 32, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 500}, Best CV score: 0.78468, Test accuracy: 0.76493\n",
      "Test size: 0.3, Best parameters: {'classifier__max_depth': 10, 'classifier__max_features': 32, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 500}, Best CV score: 0.78610, Test accuracy: 0.75810\n",
      "Test size: 0.4, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 32, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.77282, Test accuracy: 0.77009\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import classification_report, accuracy_score\n",
    "\n",
    "test_sizes = [ 0.2, 0.3, 0.4]  # Different test sizes to evaluate\n",
    "\n",
    "results = []  # To store results for different splits\n",
    "\n",
    "for test_size in test_sizes:\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)\n",
    "\n",
    "    pipe = Pipeline([\n",
    "        ('classifier', RandomForestClassifier( random_state=42))\n",
    "    ])\n",
    "\n",
    "    param_grid = {\n",
    "        'classifier__n_estimators': [200,300,500],  # Number of trees\n",
    "        'classifier__max_depth': [None, 10,20],  # Max depth of trees\n",
    "        'classifier__min_samples_split': [2],       # Minimum number of samples required to split an internal node\n",
    "        'classifier__min_samples_leaf': [1],         # Minimum number of samples required to be at a leaf node\n",
    "        'classifier__max_features': [ 32 ],  # Number of features to consider for the best split\n",
    "\n",
    "    }\n",
    "\n",
    "    grid_search = GridSearchCV(pipe, param_grid, cv=5, verbose=3)\n",
    "    grid_search.fit(X_train, y_train)\n",
    "\n",
    "    # Evaluating the best model on the test set\n",
    "    best_model = grid_search.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    test_accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "    # Store results including test accuracy\n",
    "    best_params = grid_search.best_params_\n",
    "    best_score = grid_search.best_score_\n",
    "    results.append((test_size, best_params, best_score, test_accuracy))\n",
    "\n",
    "# Output the results\n",
    "for test_size, best_params, best_score, test_accuracy in results:\n",
    "    print(f\"Test size: {test_size}, Best parameters: {best_params}, Best CV score: {best_score:.5f}, Test accuracy: {test_accuracy:.5f}\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "3OOcHq9LeSZ4"
   },
   "source": [
    "**Results explained**:\n",
    "The inclusion of max_depth': 20 and max_features: 32 showed improvements with both models of test size 0.2 and 0.3 showing improved CV and test accuracys\n",
    "\n",
    "however the test size 0.4 model did not show improvement with 32 feature selection over the previous\n",
    "\n",
    "i dediced to include the 32 feature limit which was optimum in the previous knn model, while these are different classifiers this could be a sweet spot which retains essential patterns in the data without adding too much noise,\n",
    " the max depth was swapped from to 50 to 20 here and was found to be an optimum parameter in the 0.2 test set size with a CV score of **78.46%** and accuracy of **76.49**.\n",
    "\n",
    "\n",
    "model:\n",
    "```python\n",
    "Test size: 0.2, Best parameters: {'classifier__max_depth': 20, 'classifier__max_features': 32, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 500}, Best CV score: 0.78468, Test accuracy: 0.76493\n",
    "```\n",
    "This model is the second best model so far after the previous evaluations best model, however this model has a much higher trainining set of 0.8 compared to the bests 0.6 while also having a high CV and testing accuracy\n",
    "\n",
    "\n",
    "---\n",
    "### **Random tree classifier - final evaluation , + max_features=60,sqrt,log2,  +max_depth=25**\n",
    "based off of the previous evaluations results ,  i decided to do another evaluation which added a maxfeatures= 60 , sqrt and log2.\n",
    " and i also added another depth of 25 to see if it showed improvemnt in the models.\n",
    "\n",
    " **Reasoning for these parameters**\n",
    "\n",
    " based off the previous evaluation 2, I found some improvement in the models using  parameters **max_depth': 20 and max_features: 32**\n",
    " however there was no improvement in the model with test size 0.4\n",
    "\n",
    "so for this final model i thought that it might be possible to **improve the test size of 0.4** with the following parameters:\n",
    "\n",
    " set **max_feature=** = 32, **60, 'sqrt','log2'** since 60 was an optimum parameter in the previous tasks classifier i decided to try it in this one, i also returned sqrt and log2 since they returned the best parameters in evaluation 1 and I wanted to see if i can further improve all models\n",
    "\n",
    "set **max depth** = none,10,20,**25**: since the previous evaluation 2 showed improvement with depth 20, i decided to add 25 to see if it would improve it\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "YeSCCx-jbSbp",
    "outputId": "e87c0d07-8802-443f-83ab-a27a5ce4a990"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 48 candidates, totalling 240 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   3.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.766 total time=   3.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   3.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   3.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   3.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   4.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   5.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   4.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   4.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.822 total time=   5.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   7.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=   8.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   8.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.779 total time=   7.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=   8.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.790 total time=   5.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   6.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   5.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.784 total time=   5.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.845 total time=   5.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   8.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   8.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   8.4s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   8.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.840 total time=   8.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.785 total time=  13.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=  14.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.766 total time=  13.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=  14.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=  14.5s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.798 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   1.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   3.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   2.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   2.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.826 total time=   1.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   3.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   3.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   2.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.789 total time=   2.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.822 total time=   4.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   1.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.817 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.5s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=   1.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   2.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   3.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   2.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.743 total time=   4.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.793 total time=   2.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.808 total time=   3.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   3.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   4.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   4.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   3.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   5.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.790 total time=   4.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   4.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   5.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   5.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.831 total time=   6.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.794 total time=  11.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   9.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=  11.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.779 total time=  10.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.822 total time=   9.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   6.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   7.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   6.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   6.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   6.5s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.804 total time=   9.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=  11.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   8.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   7.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.831 total time=   8.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.808 total time=  12.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.748 total time=  14.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.766 total time=  16.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=  17.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=  15.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.804 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.734 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.808 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   2.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   2.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   1.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   1.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.822 total time=   2.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   3.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   3.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.743 total time=   2.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.784 total time=   3.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=   5.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.804 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.804 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   1.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.803 total time=   3.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   3.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.748 total time=   2.5s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.748 total time=   1.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.789 total time=   2.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.812 total time=   4.5s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   3.5s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.766 total time=   3.1s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   3.6s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   3.0s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   3.1s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   4.3s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   5.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   4.4s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   4.9s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.822 total time=   4.6s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=  10.8s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=  10.5s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=   9.8s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.779 total time=  11.2s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=  11.2s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.790 total time=   9.3s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   6.1s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   5.9s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.784 total time=   5.1s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.845 total time=   6.1s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.804 total time=   7.4s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   8.8s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   8.4s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   7.5s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.840 total time=   8.8s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.785 total time=  13.0s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=  14.3s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.766 total time=  13.7s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=  13.3s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=  14.0s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.798 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.817 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.4s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.789 total time=   1.4s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.822 total time=   1.5s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   3.2s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   2.4s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   2.4s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.789 total time=   2.4s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.822 total time=   2.4s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.784 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.817 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   2.0s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   2.8s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.743 total time=   2.0s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.789 total time=   2.0s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.817 total time=   2.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   2.9s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.766 total time=   3.8s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   2.9s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   2.9s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   3.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   5.0s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   4.4s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   4.7s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   4.8s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.822 total time=   4.5s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   7.9s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=   7.7s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   7.7s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.779 total time=   7.9s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=   7.4s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.790 total time=   5.6s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   5.4s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   5.9s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.784 total time=   5.0s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.845 total time=   5.9s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   7.7s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.757 total time=   8.9s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   8.2s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   8.2s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.840 total time=   9.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.785 total time=  13.7s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.757 total time=  14.9s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.766 total time=  14.2s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=  14.0s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.826 total time=  15.6s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.757 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.748 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.798 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.812 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.799 total time=   1.5s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.6s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.784 total time=   2.3s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.826 total time=   1.8s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   2.6s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   2.6s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   2.5s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.789 total time=   3.3s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.822 total time=   2.8s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.799 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.779 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.817 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.752 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.748 total time=   1.5s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.779 total time=   1.9s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.808 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.804 total time=   2.1s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.752 total time=   2.1s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.743 total time=   2.1s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.793 total time=   2.1s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.808 total time=   3.0s\n",
      "Fitting 5 folds for each of 48 candidates, totalling 240 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   2.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   3.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   2.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   2.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   2.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   4.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   4.0s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   3.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   4.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.824 total time=   4.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   6.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   7.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   7.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   6.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.824 total time=   7.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.797 total time=   4.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   4.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   5.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   4.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.829 total time=   5.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.797 total time=   6.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   7.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   6.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.738 total time=   7.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.824 total time=   7.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.797 total time=  11.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=  12.2s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=  11.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.743 total time=  11.5s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.834 total time=  12.4s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.807 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   2.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=   2.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   2.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.749 total time=   2.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.797 total time=   2.2s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.813 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   1.9s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.754 total time=   1.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   1.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=   2.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.813 total time=   2.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   2.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.754 total time=   2.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   2.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.754 total time=   2.5s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.818 total time=   3.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   3.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   3.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   4.4s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   3.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.818 total time=   3.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.791 total time=   6.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   6.2s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   6.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   6.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.829 total time=   6.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.797 total time=   4.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   5.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   4.2s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   4.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.824 total time=   5.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.797 total time=   6.5s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   7.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   6.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.743 total time=   7.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.824 total time=   6.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.797 total time=  11.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=  11.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=  11.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.743 total time=  10.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.818 total time=  11.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.4s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.807 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   2.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   2.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=   2.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   2.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.802 total time=   2.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.802 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   2.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.754 total time=   2.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   1.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=   1.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.802 total time=   1.8s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   2.5s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   3.3s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   2.4s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   2.4s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   2.6s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   4.2s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   4.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   3.7s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   3.9s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.824 total time=   4.4s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   6.5s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   7.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   6.2s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   6.9s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.824 total time=   6.8s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.797 total time=   4.7s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   4.7s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   5.1s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   4.3s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.829 total time=   4.6s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.797 total time=   7.4s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   7.7s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   6.4s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.738 total time=   7.2s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.829 total time=   7.0s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.797 total time=  11.6s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=  12.3s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=  11.6s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.743 total time=  11.6s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.834 total time=  12.6s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.7s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.807 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   2.1s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=   2.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   2.5s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.754 total time=   2.6s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.797 total time=   2.1s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.6s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.818 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   1.8s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   1.8s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   1.8s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=   1.8s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.813 total time=   1.8s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   3.3s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.765 total time=   2.6s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   2.5s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   2.5s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.813 total time=   3.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   4.1s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   3.8s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   3.9s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   4.3s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.824 total time=   3.9s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   7.0s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   6.5s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   7.0s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.759 total time=   6.1s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.824 total time=   7.3s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.797 total time=   4.4s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   5.1s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   4.7s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.743 total time=   4.4s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.829 total time=   5.4s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.797 total time=   6.6s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   7.6s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   6.5s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.738 total time=   7.3s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.824 total time=   7.4s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.797 total time=  11.9s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=  12.2s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=  11.6s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.743 total time=  11.7s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.834 total time=  12.5s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.791 total time=   0.9s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.749 total time=   1.2s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.791 total time=   1.3s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.749 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.807 total time=   1.3s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   2.1s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=   3.0s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   2.1s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.749 total time=   2.1s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.797 total time=   2.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.786 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.759 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.807 total time=   0.9s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.786 total time=   1.6s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.759 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.765 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.813 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.786 total time=   1.8s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.754 total time=   1.8s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   1.8s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.765 total time=   2.5s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.813 total time=   2.1s\n",
      "Fitting 5 folds for each of 48 candidates, totalling 240 fits\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   2.8s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   2.4s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   2.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   2.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   2.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   3.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   3.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   3.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   3.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   4.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.739 total time=   5.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.750 total time=   5.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   5.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.3s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.825 total time=   6.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   3.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   3.9s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   4.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   3.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   3.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.739 total time=   6.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   5.5s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   6.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   5.4s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.819 total time=   6.3s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.739 total time=   9.6s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   9.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   9.5s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.769 total time=   9.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.812 total time=   9.6s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.783 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.776 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   2.3s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   2.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   1.9s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.794 total time=   1.9s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.831 total time=   1.9s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.776 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.4s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.3s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.831 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.764 total time=   1.7s\n",
      "[CV 2/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.769 total time=   1.6s\n",
      "[CV 4/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.794 total time=   1.6s\n",
      "[CV 5/5] END classifier__max_depth=None, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.831 total time=   2.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.752 total time=   2.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   2.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   2.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   2.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.806 total time=   2.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.758 total time=   3.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   3.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   3.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   3.2s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.812 total time=   3.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.758 total time=   5.2s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.0s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   5.3s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.806 total time=   5.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.739 total time=   3.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   3.8s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   3.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   3.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.806 total time=   3.7s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.739 total time=   6.3s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   5.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   5.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   5.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   6.3s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.745 total time=   9.4s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.750 total time=   9.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   9.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   9.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.819 total time=   9.4s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.770 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.819 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.758 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.1s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.1s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   1.1s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   1.9s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.750 total time=   2.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.769 total time=   1.9s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.787 total time=   1.9s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.819 total time=   1.9s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.758 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.787 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.806 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.4s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.812 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.745 total time=   1.6s\n",
      "[CV 2/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.769 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   1.6s\n",
      "[CV 4/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.787 total time=   1.6s\n",
      "[CV 5/5] END classifier__max_depth=10, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.812 total time=   1.8s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   2.8s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   2.1s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   2.1s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   2.2s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   2.2s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   4.1s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   3.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   3.1s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   3.3s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   3.9s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.739 total time=   5.5s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.750 total time=   6.1s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   5.2s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.7s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.825 total time=   5.5s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   3.7s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   4.4s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   3.5s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   3.7s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   4.3s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.739 total time=   5.8s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   5.8s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   5.7s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   5.5s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.819 total time=   6.4s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.739 total time=  10.1s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   9.1s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   9.6s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.769 total time=   9.8s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.812 total time=  10.1s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.783 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.8s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   0.8s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.776 total time=   1.2s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.2s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.2s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.3s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   1.7s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   2.0s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   1.8s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   1.9s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.794 total time=   1.9s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.831 total time=   1.8s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.776 total time=   0.7s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.9s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   0.6s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   1.0s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   0.9s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.831 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   1.7s\n",
      "[CV 2/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   1.6s\n",
      "[CV 3/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.769 total time=   1.8s\n",
      "[CV 4/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.794 total time=   2.3s\n",
      "[CV 5/5] END classifier__max_depth=20, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.831 total time=   1.6s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   2.1s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.750 total time=   2.1s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   2.0s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   2.2s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   2.7s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.745 total time=   3.2s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.750 total time=   3.1s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   3.0s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   3.9s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   3.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.739 total time=   5.3s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.750 total time=   5.8s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   5.1s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.762 total time=   5.9s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=32, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.825 total time=   5.2s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.745 total time=   3.9s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.769 total time=   4.2s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.781 total time=   3.5s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   3.6s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.825 total time=   4.5s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.739 total time=   5.6s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   6.2s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.781 total time=   5.3s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   6.1s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.819 total time=   5.7s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.739 total time=  10.0s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   9.6s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.781 total time=   8.7s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.769 total time=   9.8s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=60, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.812 total time=  10.0s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.783 total time=   0.8s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.762 total time=   0.7s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.775 total time=   0.8s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.800 total time=   0.8s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.776 total time=   1.1s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.756 total time=   1.1s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.769 total time=   1.3s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.794 total time=   1.7s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.825 total time=   1.2s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.770 total time=   1.9s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   1.8s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.775 total time=   1.9s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.794 total time=   1.9s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=sqrt, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.831 total time=   2.1s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.776 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.756 total time=   0.7s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.794 total time=   0.7s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=200;, score=0.831 total time=   0.7s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.770 total time=   1.0s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.762 total time=   0.9s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.775 total time=   1.0s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.787 total time=   1.0s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=300;, score=0.831 total time=   1.0s\n",
      "[CV 1/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.764 total time=   1.6s\n",
      "[CV 2/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.756 total time=   1.7s\n",
      "[CV 3/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.769 total time=   2.4s\n",
      "[CV 4/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.794 total time=   1.6s\n",
      "[CV 5/5] END classifier__max_depth=25, classifier__max_features=log2, classifier__min_samples_leaf=1, classifier__min_samples_split=2, classifier__n_estimators=500;, score=0.831 total time=   1.6s\n",
      "Test size: 0.2, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 60, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.78844, Test accuracy: 0.74627\n",
      "Test size: 0.3, Best parameters: {'classifier__max_depth': 10, 'classifier__max_features': 32, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 500}, Best CV score: 0.78610, Test accuracy: 0.75810\n",
      "Test size: 0.4, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 'sqrt', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.79027, Test accuracy: 0.77009\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import classification_report, accuracy_score\n",
    "\n",
    "test_sizes = [ 0.2, 0.3, 0.4]  # Different test sizes to evaluate\n",
    "\n",
    "results = []  # To store results for different splits\n",
    "\n",
    "for test_size in test_sizes:\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)\n",
    "\n",
    "    pipe = Pipeline([\n",
    "        ('classifier', RandomForestClassifier( random_state=42))\n",
    "    ])\n",
    "\n",
    "    param_grid = {\n",
    "        'classifier__n_estimators': [200,300,500],  # Number of trees\n",
    "        'classifier__max_depth': [None, 10, 20, 25],  # Max depth of trees\n",
    "        'classifier__min_samples_split': [2],       # Minimum number of samples required to split an internal node\n",
    "        'classifier__min_samples_leaf': [1],         # Minimum number of samples required to be at a leaf node\n",
    "        'classifier__max_features': [ 32, 60, 'sqrt','log2'],  # Number of features to consider for the best split\n",
    "\n",
    "    }\n",
    "\n",
    "    grid_search = GridSearchCV(pipe, param_grid, cv=5, verbose=3)\n",
    "    grid_search.fit(X_train, y_train)\n",
    "\n",
    "    # Evaluating the best model on the test set\n",
    "    best_model = grid_search.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    test_accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "    # Store results including test accuracy\n",
    "    best_params = grid_search.best_params_\n",
    "    best_score = grid_search.best_score_\n",
    "    results.append((test_size, best_params, best_score, test_accuracy))\n",
    "\n",
    "# Output the results\n",
    "for test_size, best_params, best_score, test_accuracy in results:\n",
    "    print(f\"Test size: {test_size}, Best parameters: {best_params}, Best CV score: {best_score:.5f}, Test accuracy: {test_accuracy:.5f}\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "3VgQ8kTl_9a3"
   },
   "source": [
    "**Results explained**:\n",
    "\n",
    "as can be seen from the results, the **best model** is still the one from the very first evaluation 1 with CV score of **79.027%** and test accuracy of **77.009%**,\n",
    "model:\n",
    "```python\n",
    "Test size: 0.4, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 'sqrt', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}\n",
    "```\n",
    "\n",
    "the test size of 0.3 had the same CV of  **78.610%** as the previous evaluation 2 and accuracy of **75.810**\n",
    "```python\n",
    "Test size: 0.3, Best parameters: {'classifier__max_depth': 10, 'classifier__max_features': 32, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 500}, Best CV score: 0.78610, Test accuracy: 0.75810\n",
    "```\n",
    "\n",
    "the test size of 0.2 showed improvement over the previous evaluation 2 at CV = **78.8844** but had a lower accuracy at **74.627**\n",
    "```python\n",
    "Test size: 0.2, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 60, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.78844, Test accuracy: 0.74627\n",
    "```\n",
    "\n",
    "# The best models were between these two:\n",
    "from Evaluation 2 which had a combination fo the second highest CV at that point and 2nd highest overall test accuracy while also having a high training data set of **0.8**.\n",
    "\n",
    "CV **78.46%** and accuracy of **76.49%**.\n",
    "```python\n",
    "Test size: 0.2, Best parameters: {'classifier__max_depth': 20, 'classifier__max_features': 32, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 500}, Best CV score: 0.78468, Test accuracy: 0.76493\n",
    "```\n",
    "This model had the highest CV and test accuracy however it has a lower training set of **0.6**.\n",
    "\n",
    "CV **79.027%** and test accuracy of **77.009%**\n",
    "```python\n",
    "Test size: 0.4, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 'sqrt', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.79027, Test accuracy: 0.77009\n",
    "```\n",
    "\n",
    "To decide between the two i decided to do repeated random subsampling (montecarlo)\n",
    "\n",
    "---\n",
    "\n",
    "### Monte Carlo Cross VAlidation between the 2 best models , I did random states of 100 iterations of each model and the results were mean accuracy and standard deviation.\n",
    "\n",
    "Model 0.4\n",
    "```python\n",
    "Test size: 0.4, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 'sqrt', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.79027, Test accuracy: 0.77009\n",
    "```\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "dZzFu8FmOlIT",
    "outputId": "887616c4-edcb-4a0f-f794-c5fd396531b8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average Test Accuracy over 100 iterations: 0.77376\n",
      "Standard Deviation of Test Accuracy: 0.01521\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score, classification_report\n",
    "from sklearn.pipeline import Pipeline\n",
    "\n",
    "# Parameters for the evaluation\n",
    "num_iterations = 100 # Number of repetitions\n",
    "test_size = 0.4\n",
    "\n",
    "\n",
    "accuracies = []\n",
    "\n",
    "for _ in range(num_iterations):\n",
    "    # Split the data\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)\n",
    "\n",
    "    # Set up the pipeline with the RandomForest configuration\n",
    "    pipeline = Pipeline([\n",
    "        ('classifier', RandomForestClassifier(\n",
    "            n_estimators=200,           # Number of trees\n",
    "            max_features='sqrt',         # Number of features to consider at every split\n",
    "            max_depth=None,              # Maximum number of levels in tree\n",
    "            min_samples_leaf=1,          # Minimum number of samples required at each leaf node\n",
    "            min_samples_split=2,         # Minimum number of samples required to split an internal node\n",
    "\n",
    "        ))\n",
    "    ])\n",
    "\n",
    "    # Fit the pipeline to the training data\n",
    "    pipeline.fit(X_train, y_train)\n",
    "\n",
    "    # Predict the test set\n",
    "    y_pred = pipeline.predict(X_test)\n",
    "\n",
    "    # Calculate the accuracy of the model\n",
    "    accuracy = accuracy_score(y_test, y_pred)\n",
    "    accuracies.append(accuracy)\n",
    "\n",
    "# Calculate the average accuracy\n",
    "average_accuracy = np.mean(accuracies)\n",
    "print(f\"Average Test Accuracy over {num_iterations} iterations: {average_accuracy:.5f}\")\n",
    "\n",
    "# standard deviation\n",
    "std_deviation = np.std(accuracies)\n",
    "print(f\"Standard Deviation of Test Accuracy: {std_deviation:.5f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "axnfbveaSk2m"
   },
   "source": [
    "Model 0.2:\n",
    "```python\n",
    "Test size: 0.2, Best parameters: {'classifier__max_depth': 20, 'classifier__max_features': 32, 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 500}, Best CV score: 0.78468, Test accuracy: 0.76493\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "1DXLMZFDPNtg",
    "outputId": "90efb454-c5f1-4bfe-b14d-f07b422f2455"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average Test Accuracy over 100 iterations: 0.7746\n",
      "Standard Deviation of Test Accuracy: 0.0237\n"
     ]
    }
   ],
   "source": [
    "# Parameters for the evaluation\n",
    "num_iterations = 100  # Number of repetitions\n",
    "test_size = 0.2\n",
    "\n",
    "accuracies = []\n",
    "\n",
    "for _ in range(num_iterations):\n",
    "    # Split the data\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)\n",
    "\n",
    "    # pipeline with the RandomForest configuration\n",
    "    pipeline = Pipeline([\n",
    "        ('classifier', RandomForestClassifier(\n",
    "            n_estimators=500,           # Number of trees\n",
    "            max_features=32,            # Number of features to consider at every split\n",
    "            max_depth=20,               # Maximum number of levels in tree\n",
    "            min_samples_leaf=1,         # Minimum number of samples required at each leaf node\n",
    "            min_samples_split=2,        # Minimum number of samples required to split an internal node\n",
    "\n",
    "        ))\n",
    "    ])\n",
    "\n",
    "    # Fit the pipeline to the training data\n",
    "    pipeline.fit(X_train, y_train)\n",
    "\n",
    "    # Predict the test set\n",
    "    y_pred = pipeline.predict(X_test)\n",
    "\n",
    "    # Calculate the accuracy of the model\n",
    "    accuracy = accuracy_score(y_test, y_pred)\n",
    "    accuracies.append(accuracy)\n",
    "\n",
    "# Calculate the average accuracy\n",
    "average_accuracy = np.mean(accuracies)\n",
    "print(f\"Average Test Accuracy over {num_iterations} iterations: {average_accuracy:.4f}\")\n",
    "\n",
    "# display the standard deviation to understand the variability\n",
    "std_deviation = np.std(accuracies)\n",
    "print(f\"Standard Deviation of Test Accuracy: {std_deviation:.4f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "h6_db6wmXgYa"
   },
   "source": [
    "### Results explanation:\n",
    "test size 0.4 had Average Test Accuracy over 100 iterations:**0.77376**\n",
    "Standard Deviation of Test Accuracy: **0.01521**\n",
    "\n",
    "test size 0.2 had Average Test Accuracy over 100 iterations: **0.7746**\n",
    "Standard Deviation of Test Accuracy: **0.0237**\n",
    "\n",
    "Explanation:\n",
    "Test size 0.2 was 0.00100 higher accuracy than test size 0.4, however 0.2 had a much higher standard deviation which was 0.00849 higher or 55.8% more than 0.4s\n",
    "\n",
    "therefore the best overall modell is test size 0.4 🇰\n",
    "\n",
    "#Final Model for entire task:\n",
    "```python\n",
    "Test size: 0.4, Best parameters: {'classifier__max_depth': None, 'classifier__max_features': 'sqrt', 'classifier__min_samples_leaf': 1, 'classifier__min_samples_split': 2, 'classifier__n_estimators': 200}, Best CV score: 0.79027, Test accuracy: 0.77009\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "6ku9qky9yh3j",
    "outputId": "fad76e98-75b6-4e00-b5af-a084d5dfe276"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Final Model Test Accuracy: 0.77009\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "       addmc       0.85      0.89      0.87        19\n",
      "          d4       0.48      0.42      0.45        67\n",
      "       ganak       0.54      0.36      0.43        59\n",
      "        gpmc       0.84      0.92      0.88       369\n",
      "    sharpsat       0.46      0.29      0.35        21\n",
      "\n",
      "    accuracy                           0.77       535\n",
      "   macro avg       0.63      0.58      0.60       535\n",
      "weighted avg       0.75      0.77      0.75       535\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score, classification_report\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.decomposition import PCA\n",
    "# Parameters\n",
    "test_size = 0.4\n",
    "random_state = 42\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)\n",
    "\n",
    "# Set up the pipeline with the final model configuration\n",
    "pipeline = Pipeline([\n",
    "    ('classifier', RandomForestClassifier(\n",
    "        n_estimators=200,           # Number of trees\n",
    "        max_features='sqrt',         # Number of features to consider at every split\n",
    "        max_depth=None,              # Maximum number of levels in tree\n",
    "        min_samples_leaf=1,          # Minimum number of samples required at each leaf node\n",
    "        min_samples_split=2,         # Minimum number of samples required to split an internal node\n",
    "        random_state=random_state  # Random state for reproducibility\n",
    "    ))\n",
    "\n",
    "])\n",
    "\n",
    "# Fit the pipeline to the training data\n",
    "pipeline.fit(X_train, y_train)\n",
    "\n",
    "# Predict the test set\n",
    "y_pred = pipeline.predict(X_test)\n",
    "\n",
    "# Calculate the accuracy of the model\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "# Output the accuracy and classification report\n",
    "print(f\"Final Model Test Accuracy: {accuracy:.5f}\")\n",
    "print(classification_report(y_test, y_pred))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "0W6hJpNFcfdU"
   },
   "source": [
    "# Explanation of final model\n",
    "**test Size (0.4):** Strikes a balance between training and validation, allowing for good generalisation.\n",
    "\n",
    "- **Best Accuracy (0.77009):** High accuracy indicates effective generaliasation to unseen data.\n",
    "\n",
    "- **Best CV score (0.79027):** shows that the model has consistent performance across different data subsets showing its reliablilty.\n",
    "\n",
    "- **RandomForestClassifier:** 200 trees, allowing for good predictions through majority voting which minimises overfitting and improves prediction\n",
    ".\n",
    "- **Max Features ('sqrt'):** Ensures that each tree in the forest considers a subset of features at each split, increasing diversity among the trees.\n",
    "\n",
    "- **No Max Depth:** Allows trees to expand fully based on the information in the data, capturing complex patterns without early stopping.\n",
    "\n",
    "- **Minimum Samples per Leaf (1) and Split (2):** Fine-tunes the trees to be highly sensitive to the data , optimising the detail captured in each split.\n",
    "\n",
    "- **Precision and Recall:** strong in dominant classes like 'addmc' and 'gpmc', which shows the model's capability to handle imbalanced data. Variation across classes shows areas for further tuning but confirms the model's adaptability.\n",
    "\n",
    "**Conclusion:**\n",
    "This RandomForest model delivers high accuracy and reliability. Its configuration, including using a good configuration of  hyperparameters and deep trees, ensures it is well suited for complex classification tasks involving diverse  data [2]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Q01BjiiCJTR4"
   },
   "source": [
    "\b# <font color=\"blue\">Testing part - Not needed for CS3033</font>\n",
    "\n",
    "Save your best model into your GitHub. And create a single code cell that loads it and evaluates it on the following test dataset:\n",
    "https://github.com/andvise/DM_Assignment/blob/main/test_data.csv\n",
    "\n",
    "We will cover this part in a Lab session.\n",
    "\n",
    "I should be able to run the code cell independently, load all the libraries you need as well.\n",
    "\n",
    "This link currently contains a sample of the training set. The real test set will be released after the submission."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "IWx4lyuQI929",
    "outputId": "2d764aae-bffe-4f22-ae1a-d4a78c5983cf"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Accuracy: 0.76418\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "       addmc       0.73      0.89      0.80         9\n",
      "          d4       0.43      0.41      0.42        37\n",
      "       ganak       0.54      0.35      0.42        40\n",
      "        gpmc       0.85      0.91      0.88       236\n",
      "    sharpsat       0.42      0.38      0.40        13\n",
      "\n",
      "    accuracy                           0.76       335\n",
      "   macro avg       0.59      0.59      0.58       335\n",
      "weighted avg       0.75      0.76      0.75       335\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from joblib import dump, load\n",
    "from io import BytesIO\n",
    "import requests\n",
    "import pandas as pd\n",
    "\n",
    "# INSERT YOUR MODEL'S URL\n",
    "mLink = 'https://github.com/AirDoogle/Datamining_Best_classifier/raw/main/best_model.joblib'\n",
    "mfile = BytesIO(requests.get(mLink).content)\n",
    "model = load(mfile)\n",
    "\n",
    "df = pd.read_csv(\"https://github.com/andvise/DM_Assignment/raw/main/test_data.csv\")\n",
    "\n",
    "# Your code here\n",
    "\n",
    "X_test = df.drop('label', axis=1)\n",
    "y_test = df['label']\n",
    "\n",
    "# Predict using the loaded model\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "# Evaluate the predictions\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "report = classification_report(y_test, y_pred)\n",
    "\n",
    "# Print out the results\n",
    "print(f\"Test Accuracy: {accuracy:.5f}\")\n",
    "print(\"Classification Report:\")\n",
    "print(report)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "pdVWP-Eyz0ZF"
   },
   "source": [
    "### References\n",
    "\n",
    "[1]Scikit-learn: Machine Learning in Python, Pedregosa et al., JMLR 12, pp. 2825-2830, 2011.\n",
    "\n",
    "[2] Random Forest Classifier Using Scikit-Learn. GeeksforGeeks. Accessed April 14, 2024. https://www.geeksforgeeks.org/random-forest-classifier-using-scikit-learn/\n",
    "\n",
    "[3] Brownlee J. RFE (Recursive Feature Elimination) Feature Selection in Python. Machine Learning Mastery. Accessed April 14, 2024. https://machinelearningmastery.com/rfe-feature-selection-in-python/\n",
    "\n",
    "[4] Implementing PCA in Python with Scikit-Learn. Stack Abuse. Accessed April 14, 2024. https://stackabuse.com/implementing-pca-in-python-with-scikit-learn/"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [
    "sCmFCsVxXfdX"
   ],
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
